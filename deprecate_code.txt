try:
                    title_element = WebDriverWait(driver, 3).until(
                        EC.text_to_be_present_in_element((By.XPATH, "//div[@class='centerWrpa']/div[@class='contentLeft']/div[2]/div[1]"), "2018-05-30")
                    )
                    print(str(title_element))
                except NoSuchElementException as nex:
                    print(str(nex))

self.request_headers = {
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
            'Accept-Encoding': 'gzip, deflate, br',
            'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
            'Host': 'www.cailianpress.com',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; …) Gecko/20100101 Firefox/60.0',
            'Referer': 'https://www.cailianpress.com/',
        }
        @staticmethod
    def extract_news_date_from_one_element(ele):
        date_element = ele.find_element_by_xpath("./div[@class='time']")
        if date_element:
            date = str(date_element.text)
            return date
        else:
            return None

             @staticmethod
    def valid_end_of_element_list(ele):
        end_element = ele.find_element_by_xpath("div[@class='getMoreWrap']")
        if end_element:
            return True
        else:
            return False

    def extract_news_data_today(self):
        driver = self.driver
        driver.implicitly_wait(10)
        driver.get(self.url)
        not_end_of_today = True
        while not_end_of_today:
            getmore_element = driver.find_element_by_class_name("getMore")
            getmore_element.click()
            driver.implicitly_wait(10)
            centerwrpa_element = driver.find_element_by_xpath(
                "//div[@class='centerWrpa']/div[@class='contentLeft']/div[2]")
            item_elements = centerwrpa_element.find_elements_by_xpath("./div")
            count_of_overflow = 0
            for item in item_elements:
                if self.valid_text_to_be_present_in_attribute(item, "style", "overflow"):
                    count_of_overflow += 1
                if count_of_overflow == 2:
                    break
            if count_of_overflow == 2:
                cur_date = ""
                count_of_overflow = 0
                for item in item_elements:
                    if self.valid_text_to_be_present_in_attribute(item, "style", "overflow"):
                        count_of_overflow += 1
                        if count_of_overflow == 1:
                            cur_date = self.extract_news_date_from_one_element(item)
                            if cur_date:
                                pass
                            else:
                                print("无法抽取当前日期")
                                continue
                        elif count_of_overflow == 2:
                            break
                    else:
                        news = self.extract_one_news_from_one_element(item, cur_date)
                        if news:
                            self.text_list.append(news)
                        else:
                            print("无法抽取当前新闻内容！")
                not_end_of_today = False
        self.print_text()